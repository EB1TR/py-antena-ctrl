version: "3"
services:
#  portainer:
#    image: portainer/portainer-ce
#    container_name: portainer
#    ports:
#      - "9000:9000/tcp"
#      - "8000:8000/tcp"
#    volumes:
#      - '/var/run/docker.sock:/var/run/docker.sock'
#      - 'portainer:/data'
#    restart: unless-stopped

  mqtt:
    container_name: mqtt
    image: eclipse-mosquitto
    volumes:
      - "./svc/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf"
    networks:
      antena:
        ipv4_address: "172.0.33.2"
    ports:
      - "1883:1883"
      - "9001:9001"
    restart: unless-stopped

  nginx:
    container_name: nginx
    image: nginx:alpine
    networks:
      antena:
        ipv4_address: "172.0.33.3"
    ports:
      - "80:80"
    volumes:
      - "./static:/usr/share/nginx/html:ro"
      - "./svc/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    depends_on:
      - mqtt
    restart: unless-stopped

  n1:
    container_name: n1
    build:
      context: ./svc/udp
      dockerfile: Dockerfile
    environment:
      - MQTT_HOST=172.0.33.2
      - MQTT_PORT=1883
    networks:
      antena:
        ipv4_address: "172.0.33.4"
    ports:
      - "12060:12060/udp"
    volumes:
      - "./cfg:/app/cfg"
    restart: unless-stopped

  control:
    container_name: control
    build:
      context: ./svc/control
      dockerfile: Dockerfile
    environment:
      - MQTT_HOST=172.0.33.2
      - MQTT_PORT=1883
    networks:
      antena:
        ipv4_address: "172.0.33.5"
    volumes:
      - "./cfg:/app/cfg"
    restart: unless-stopped

#  node-red:
#   image: nodered/node-red:latest
#   environment:
#     - TZ=Europe/Madrid
#   ports:
#     - "1880:1880"
#     - "12061:12060/udp"
#   networks:
#     antena:
#       ipv4_address: "172.0.33.6"
#   volumes:
#     - nodered:/data

# volumes:
#   portainer:
#   nodered:

networks:
    antena:
        driver: bridge
        ipam:
            config:
                - subnet: 172.0.33.0/24
