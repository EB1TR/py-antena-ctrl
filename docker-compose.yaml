version: "3"
services:
  mqtt:
    container_name: mqtt
    restart: unless-stopped
    build:
      context: ./svc/mqtt
      dockerfile: Dockerfile
    networks:
      antena:
        ipv4_address: "172.0.33.2"
    ports:
      - "1883:1883"
      - "9001:9001"

  nginx:
    container_name: nginx
    restart: unless-stopped
    image: nginx:alpine
    networks:
      antena:
        ipv4_address: "172.0.33.3"
    ports:
      - "80:80"
    volumes: 
      - "./static:/usr/share/nginx/html:ro"
      - "./svc/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro"
    depends_on:
      - mqtt

  n1:
    container_name: n1
    restart: unless-stopped
    build:
      context: ./svc/udp
      dockerfile: Dockerfile
    environment:
      - MQTT_HOST=172.0.33.2
      - MQTT_PORT=1883
    networks:
      antena:
        ipv4_address: "172.0.33.4"
    ports:
      - "12060:12060/udp"
    volumes: 
      - "./cfg:/app/cfg"

  control:
    container_name: control
    restart: unless-stopped
    build:
      context: ./svc/control
      dockerfile: Dockerfile
    environment:
      - MQTT_HOST=172.0.33.2
      - MQTT_PORT=1883
    networks:
      antena:
        ipv4_address: "172.0.33.5"
    volumes: 
      - "./cfg:/app/cfg"

  node-red:
   image: nodered/node-red:latest
   environment:
     - TZ=Europe/Madrid
   ports:
     - "1880:1880"
     - "12061:12060/udp"
   networks:
     antena:
       ipv4_address: "172.0.33.6"
   volumes:
     - nodered:/data


volumes:
  nodered:

networks:
    antena:
        driver: bridge
        ipam:
            config:
                - subnet: 172.0.33.0/24
